tracker:
  trackerId: 'Tracker id'
  instance: 'Instanz'
  pw: 'pw'
  copyToClipboard: 'In die Zwischenablage'
  level: 'Lvl'
  notoriousMonster: 'NM'
  spawnedBy: 'Ausgelöst durch'
  position: 'POS'
  popped: 'Ausgelöst'
  respawn: 'Nächstes Mal'
  gales: 'Stürmisch'
  weather: 'Wetter'
  night: 'Nacht'
  nextGalesIn: 'Nächstes Stürmisch in'
  nextSpecialWeatherIn: 'Nächste/s/r {weather} in'
  galesIn: 'Stürmisch in'
  specialWeatherIn: '{weather} in'
  nightIn: 'Nacht in'
  nightBeginsIn: 'Nacht beginnt in'
  nightEndsIn: 'Nacht endet in'
  askingForPazuzu: '{viewers} schauen zu'
  resetAllWarning: 'Warnung: Dies setzt die Pop-Zeit für alle NMs zurück. Bist du dir sicher?'
  exportTracker: 'Tracker-Kopie anlegen'
  enterPassword: 'Passwort eingeben'
  dataCenter: 'Datenzentrum'
  instanceId: 'Instanz-ID'

  timeDialog:
    timeAgo: 'Da seit'
    localTime: 'Lokale Zeit'
    hourShort: 'h'
    minuteShort: 'min'
    secondShort: 'sek'
    minutesAgo: |-
      {count} {count, plural,
        one {Minute}
        other {Minuten}
      } 
    hoursAgo: |-
      {count} {count, plural,
        one {Stunde}
        other {Stunden}
      }

  button:
    pop: 'Ist da'
    reset: 'Reset'
    resetAll: 'Alles neu'

  tooltips:
    copied: 'kopiert!'
    copyTrackerId: 'Tracker id'
    copyTrackerUrl: 'Tracker URL'
    copyTrackerPassword: 'Trackerpasswort'
    copyKilledNm: 'getötete NMs'
    copySoonNm: 'bald verfügbare NMs'
    copyAvailNm: 'Verfügbare NMs'
    copyTimeToWeather: 'Zeit zum/r nächsten {weather}'
    copyTimeToNight: 'Nachtzyklus'
    isBossUp: '"Ist {boss} da??"'
    spamItAll: 'alles'
    exportToLocalTracker: 'Lokale Kopie erstellen'
    exportToNewTracker: 'Geteilte Kopie erstellen'
    enterTrackerPassword: 'Trackerpasswort eingeben'
    setInstanceInformation: 'Instanzdaten bearbeiten'
    dataCenterInfo: 'Durch Eingabe eines Datenzentrums wird dieser Tracker öffentlich gelistet. Instanz-IDs können durch Tools von Drittanbietern erlangt werden.'
    prepped: 'NM vorbereitet'

  clipboard:
    specialWeatherInTime: '{weather} in {time}'
    listSeparator: ' \u2192 '
    onCooldown: 'NMs auf cooldown: {list}'
    respawningSoon: 'NMs, die bald wieder auftauchen: {list}'
    openNow: 'NMs, die derzeit möglich sind: {list}'
    nmAvailable: '{nm} (up)'
    nmRespawn: '{nm} ({respawn})'
    listNone: 'keine'
    weatherCurrent: '\u2605 Derzeitiges Wetter ist {weather}! Nächstes {weather}-Wetter in: {time} LT'
    weatherNext: '\u2605 Nächstes {weather}-Wetter in: {time} LT'
    nightEnds: '\u2605 Nacht endet in {time} LT'
    nightBegins: '\u2605 Nacht beginnt in {time} LT'
    boss:
      available: '\u2605 "Ist {boss} schon da?" \uE089\uE075\uE083! (\uFF89\u00B0\u30EE\u00B0)\uFF89'
      availableWeather: '\u2605 "Ist {boss} schon da?" \uE089\uE075\uE083, aber... ( ; \u0434 ; ) >>> {weather} in {weatherTime} LT'
      dead: '\u2605 "Ist {boss} schon da?" \uE07E\uE07F! (\u30CE\u00B0\u76CA\u00B0)\u30CE >>> Erst in {time} LT'
      deadWeather: '\u2605 "Ist {boss} schon da?" \uE07E\uE07F! (\u30CE\u00B0\u76CA\u00B0)\u30CE >>> Erst in {time}, {weather} in {weatherTime} LT'
    spamItAll:
      text: '\u2605 Tracker: {url} \u2605 {nmList} \u2605 {weatherList} \u2605 {nightTime} \u2605 Alle Zeiten sind lokal \u2605'
      localTrackerText: '\u2605 {nmList} \u2605 {weatherList} \u2605 {nightTime} \u2605 Alle Zeiten sind \u2605'
      weatherNext: '{weather}-Wetter in {time}'
      weatherCurrent: '{weather} endet in {endTime} -- Nächste/s/r {weather} in {time}'
      weatherSeparator: ' \u2605 '
      nightEnds: 'Nacht endet in {time}'
      nightBegins: 'Nacht beginnt in {time}'
      
